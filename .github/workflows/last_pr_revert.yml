name: Revert Last Merged PR

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  revert_last_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 20

      - name: Find Last Merged PR Commit
        run: |
          echo "üîç Searching for last merged PR..."
          LAST_MERGE_COMMIT=$(git log --merges --pretty=format:"%H" -n 1)
          
          if [ -z "$LAST_MERGE_COMMIT" ]; then
            echo "‚ùå No merge commits found! Exiting..."
            exit 1
          fi
          
          echo "‚úÖ Found last merged commit: $LAST_MERGE_COMMIT"
          echo "LAST_MERGE_COMMIT=$LAST_MERGE_COMMIT" >> $GITHUB_ENV
          
          # Extract PR title for branch name
          MERGE_MSG=$(git log -1 --pretty=format:"%s" $LAST_MERGE_COMMIT)
          echo "MERGE_MSG=$MERGE_MSG" >> $GITHUB_ENV
          BRANCH_SUFFIX=$(echo "$MERGE_MSG" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | cut -c 1-40)
          echo "BRANCH_SUFFIX=$BRANCH_SUFFIX" >> $GITHUB_ENV

      - name: Set Up Git Identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Revert Branch
        run: |
          # Create a new branch for the revert
          REVERT_BRANCH="revert-pr-$BRANCH_SUFFIX"
          echo "REVERT_BRANCH=$REVERT_BRANCH" >> $GITHUB_ENV
          
          # Make sure we're starting from the latest main
          git checkout main
          git pull origin main
          
          # Create new branch
          git checkout -b $REVERT_BRANCH
          
          # Revert the merge commit (-m 1 specifies the main branch as the parent)
          git revert -m 1 $LAST_MERGE_COMMIT || { echo "‚ùå Revert failed!"; exit 1; }
          
          # Check if there are any changes
          if git diff --staged --quiet; then
            echo "‚ùå No changes to commit! The revert may have been empty."
            exit 1
          fi
          
          echo "‚úÖ Revert successful."
          
          # Push the new branch to the repository
          git push origin $REVERT_BRANCH

      - name: Setup GitHub CLI
        run: |
          # Install GitHub CLI if not already installed
          if ! command -v gh &> /dev/null; then
            echo "Installing GitHub CLI..."
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
          fi

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create PR using GitHub CLI
          echo "Creating PR..."
          PR_URL=$(gh pr create --title "Revert: $MERGE_MSG" \
            --body "This PR reverts the merge commit $LAST_MERGE_COMMIT. Automatically generated by the Revert Last Merged PR workflow." \
            --base main \
            --head $REVERT_BRANCH)
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ PR created successfully: $PR_URL"
          else
            echo "‚ùå Failed to create PR. Check the error message above."
            exit 1
          fi